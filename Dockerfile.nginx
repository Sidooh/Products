FROM composer:2.2 as build

COPY . /app

# TODO: Return --no-dev for production (removed for us to use clockwork in playdooh)
RUN composer install --prefer-dist --optimize-autoloader --no-interaction --ignore-platform-reqs


FROM alpine:3.16 as deploy

LABEL Maintainer="Dr H <jmnabangi@gmail.com>"
LABEL Description="Lightweight container with Nginx 1.22 & PHP 8.1 based on Alpine Linux."

# Setup document root
WORKDIR /var/www/html

# Install packages and remove default server definition
RUN apk add --no-cache \
    curl \
    nginx \
    php81 \
    php81-curl \
    php81-dom \
    php81-fileinfo \
    php81-fpm \
    php81-intl \
    php81-mbstring \
    php81-mysqli \
    php81-openssl \
    php81-phar \
    php81-pdo_mysql \
    php81-session \
    php81-tokenizer \
    php81-xml \
    php81-xmlwriter \
    supervisor

# Create symlink so programs depending on `php` still function
RUN ln -s /usr/bin/php81 /usr/bin/php

# Configure nginx
COPY docker/etc/nginx/nginx.conf /etc/nginx/nginx.conf

# Configure PHP-FPM
#COPY docker/etc/php /etc/php81

# Configure supervisord
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Make sure files/folders needed by the processes are accessable when they run under the nobody user
RUN chown -R nobody.nobody /var/www/html /run /var/lib/nginx /var/log/nginx /var/log/php81

# Switch to use a non-root user from here on
USER nobody

# Add application
COPY --chown=nobody --from=build /app /var/www/html/
#COPY --from=build /app /home/app

## Install composer from the official image
#COPY --from=composer /usr/bin/composer /usr/bin/composer
#
## Run composer install to install the dependencies
#RUN composer install --optimize-autoloader --no-interaction --no-progress

# Expose the port nginx is reachable on
EXPOSE 8080

# Let supervisord start nginx & php-fpm
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
